{"version":3,"names":["_logger","_interopRequireDefault","require","_StripeTerminalSdk","_types","_reactNative","PackageJson","name","version","description","main","module","types","source","scripts","test","typescript","lint","prettier","prepare","pods","clean","bootstrap","reset","docs","keywords","repository","author","license","bugs","url","homepage","publishConfig","registry","devDependencies","commitlint","detox","eslint","husky","jest","react","stripe","typedoc","preset","setupFiles","reporters","testEnvironment","testEnvironmentOptions","browsers","modulePathIgnorePatterns","moduleNameMapper","peerDependencies","eslintConfig","root","rules","quoteProps","singleQuote","tabWidth","trailingComma","useTabs","eslintIgnore","output","targets","configFile","project","kitType","alignDeps","requirements","development","production","capabilities","packageManager","initialize","_x","_initialize","apply","arguments","_asyncToGenerator2","default","params","_yield$StripeTerminal","StripeTerminalSdk","Object","assign","reactNativeVersion","error","reader","undefined","setConnectionToken","_x2","_x3","_x4","_setConnectionToken","token","callbackId","e","console","warn","discoverReaders","_x5","_discoverReaders","Logger","traceSdkMethod","_ref","innerParams","_yield$StripeTerminal2","_x29","cancelDiscovering","_cancelDiscovering","_yield$StripeTerminal3","connectReader","_x6","_x7","_connectReader","discoveryMethod","_ref3","_yield$StripeTerminal4","_x30","_x31","disconnectReader","_disconnectReader","_yield$StripeTerminal5","rebootReader","_rebootReader","_yield$StripeTerminal6","createPaymentIntent","_x8","_createPaymentIntent","_ref6","_yield$StripeTerminal7","paymentIntent","_x32","createSetupIntent","_x9","_createSetupIntent","_ref7","_yield$StripeTerminal8","setupIntent","_x33","collectPaymentMethod","_x0","_collectPaymentMethod","_ref8","_yield$StripeTerminal9","_x34","retrievePaymentIntent","_x1","_retrievePaymentIntent","clientSecret","_ref9","innerClientSecret","_yield$StripeTerminal0","_x35","getLocations","_x10","_getLocations","_ref0","_yield$StripeTerminal1","locations","hasMore","_x36","confirmPaymentIntent","_x11","_confirmPaymentIntent","_ref1","innerparams","_yield$StripeTerminal10","confirmedPaymentIntent","_x37","cancelPaymentIntent","_x12","_cancelPaymentIntent","_ref10","_yield$StripeTerminal11","canceledPaymentIntent","_x38","installAvailableUpdate","_installAvailableUpdate","setReaderDisplay","_x13","_setReaderDisplay","cart","_ref12","innerCart","_yield$StripeTerminal12","_x39","cancelInstallingUpdate","_cancelInstallingUpdate","retrieveSetupIntent","_x14","_retrieveSetupIntent","_ref14","_yield$StripeTerminal13","_x40","collectSetupIntentPaymentMethod","_x15","_collectSetupIntentPaymentMethod","_ref15","_yield$StripeTerminal14","_x41","clearReaderDisplay","_clearReaderDisplay","_yield$StripeTerminal15","cancelSetupIntent","_x16","_cancelSetupIntent","_ref17","_yield$StripeTerminal16","canceledSetupIntent","_x42","confirmSetupIntent","_x17","_confirmSetupIntent","_ref18","_yield$StripeTerminal17","confirmedSetupIntent","_x43","simulateReaderUpdate","_x18","_simulateReaderUpdate","update","setSimulatedCard","_x19","_setSimulatedCard","cardNumber","_ref19","innerCardNumber","_x44","setSimulatedOfflineMode","_x20","_setSimulatedOfflineMode","simulatedOffline","_ref20","innerSimulatedOffline","_x45","setSimulatedCollectInputsResult","_x21","_setSimulatedCollectInputsResult","simulatedCollectInputsBehavior","collectRefundPaymentMethod","_x22","_collectRefundPaymentMethod","_ref22","_yield$StripeTerminal18","_x46","confirmRefund","_confirmRefund","_yield$StripeTerminal19","refund","clearCachedCredentials","_clearCachedCredentials","cancelCollectPaymentMethod","_cancelCollectPaymentMethod","cancelCollectRefundPaymentMethod","_cancelCollectRefundPaymentMethod","cancelCollectSetupIntent","_cancelCollectSetupIntent","cancelConfirmPaymentIntent","_cancelConfirmPaymentIntent","cancelConfirmSetupIntent","_cancelConfirmSetupIntent","cancelConfirmRefund","_cancelConfirmRefund","getOfflineStatus","_getOfflineStatus","offlineStatus","getPaymentStatus","_getPaymentStatus","paymentStatus","getConnectionStatus","_getConnectionStatus","connectionStatus","getConnectedReader","_getConnectedReader","connectedReader","getReaderSettings","_getReaderSettings","readerSettings","setReaderSettings","_x23","_setReaderSettings","collectInputs","_x24","_collectInputs","response","cancelCollectInputs","_cancelCollectInputs","collectData","_x25","_collectData","cancelCollectData","_cancelCollectData","print","_x26","_print","content","_yield$StripeTerminal20","cancelReaderReconnection","_cancelReaderReconnection","supportsReadersOfType","_x27","_supportsReadersOfType","supportReaderResult","setTapToPayUxConfiguration","_x28","_setTapToPayUxConfiguration","Platform","OS","message","code","CommonError","Failed","getNativeSdkVersion","_getNativeSdkVersion"],"sources":["functions.ts"],"sourcesContent":["import Logger from './logger';\nimport StripeTerminalSdk from './StripeTerminalSdk';\nimport * as PackageJson from '../package.json';\nimport type {\n  InitParams,\n  InitializeResultType,\n  DiscoverReadersParams,\n  DiscoverReadersResultType,\n  CancelDiscoveringResultType,\n  DisconnectReaderResultType,\n  RebootReaderResultType,\n  CreatePaymentIntentParams,\n  CollectSetupIntentPaymentMethodParams,\n  PaymentIntentResultType,\n  GetLocationsParams,\n  GetLocationsResultType,\n  StripeError,\n  Cart,\n  CreateSetupIntentParams,\n  ClearReaderDisplayResultType,\n  SetupIntentResultType,\n  Reader,\n  RefundParams,\n  ConfirmRefundResultType,\n  ConnectReaderResultType,\n  CollectPaymentMethodParams,\n  OfflineStatus,\n  ICollectInputsParameters,\n  ICollectInputsResults,\n  PaymentStatus,\n  ConnectionStatus,\n  ConfirmPaymentMethodParams,\n  ConfirmSetupIntentMethodParams,\n  CancelSetupIntentMethodParams,\n  CancelPaymentMethodParams,\n  CollectDataParams,\n  CollectDataResultType,\n  TapToPayUxConfiguration,\n  ConnectReaderParams,\n  PrintContent,\n} from './types';\nimport { CommonError } from './types';\nimport { Platform } from 'react-native';\n\nexport async function initialize(\n  params: InitParams\n): Promise<InitializeResultType> {\n  try {\n    const { error, reader } = await StripeTerminalSdk.initialize({\n      reactNativeVersion: PackageJson.version,\n      ...params,\n    });\n\n    if (error) {\n      return {\n        error: error,\n        reader: undefined,\n      };\n    } else {\n      return {\n        error: undefined,\n        reader,\n      };\n    }\n  } catch (error) {\n    return {\n      error: error as any,\n    };\n  }\n}\n\nexport async function setConnectionToken(\n  token?: string,\n  error?: string,\n  callbackId?: string\n): Promise<void> {\n  try {\n    await StripeTerminalSdk.setConnectionToken({ token, error, callbackId });\n  } catch (e) {\n    console.warn('Unexpected error:', e);\n  }\n}\n\nexport async function discoverReaders(\n  params: DiscoverReadersParams\n): Promise<DiscoverReadersResultType> {\n  return Logger.traceSdkMethod(async (innerParams) => {\n    try {\n      const { error } = await StripeTerminalSdk.discoverReaders(innerParams);\n\n      return {\n        error: error,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'discoverReaders')(params);\n}\n\nexport async function cancelDiscovering(): Promise<CancelDiscoveringResultType> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      const { error } = await StripeTerminalSdk.cancelDiscovering();\n\n      return {\n        error: error,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'cancelDiscoverReaders')();\n}\n\nexport async function connectReader(\n  params: ConnectReaderParams,\n  discoveryMethod: Reader.DiscoveryMethod\n): Promise<ConnectReaderResultType> {\n  return Logger.traceSdkMethod(async (innerParams, discoveryMethod) => {\n    try {\n      const { error, reader } = await StripeTerminalSdk.connectReader(\n        innerParams,\n        discoveryMethod\n      );\n\n      if (error) {\n        return {\n          error,\n          reader: undefined,\n        };\n      }\n      return {\n        reader: reader!,\n        error: undefined,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'connectReader')(params, discoveryMethod);\n}\n\nexport async function disconnectReader(): Promise<DisconnectReaderResultType> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      const { error } = await StripeTerminalSdk.disconnectReader();\n\n      return {\n        error: error,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'disconnectReader')();\n}\n\nexport async function rebootReader(): Promise<RebootReaderResultType> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      const { error } = await StripeTerminalSdk.rebootReader();\n\n      return {\n        error: error,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'rebootReader')();\n}\n\nexport async function createPaymentIntent(\n  params: CreatePaymentIntentParams\n): Promise<PaymentIntentResultType> {\n  return Logger.traceSdkMethod(async (innerParams) => {\n    try {\n      const { error, paymentIntent } =\n        await StripeTerminalSdk.createPaymentIntent(innerParams);\n\n      if (error) {\n        if (paymentIntent) {\n          return {\n            error,\n            paymentIntent,\n          };\n        }\n        return {\n          error,\n          paymentIntent: undefined,\n        };\n      }\n      return {\n        paymentIntent: paymentIntent!,\n        error: undefined,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'createPaymentIntent')(params);\n}\n\nexport async function createSetupIntent(\n  params: CreateSetupIntentParams\n): Promise<SetupIntentResultType> {\n  return Logger.traceSdkMethod(async (innerParams) => {\n    try {\n      const { error, setupIntent } = await StripeTerminalSdk.createSetupIntent(\n        innerParams\n      );\n\n      if (error) {\n        return {\n          error,\n          setupIntent: undefined,\n        };\n      }\n      return {\n        setupIntent: setupIntent!,\n        error: undefined,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'createSetupIntent')(params);\n}\n\nexport async function collectPaymentMethod(\n  params: CollectPaymentMethodParams\n): Promise<PaymentIntentResultType> {\n  return Logger.traceSdkMethod(async (innerParams) => {\n    try {\n      const { error, paymentIntent } =\n        await StripeTerminalSdk.collectPaymentMethod(innerParams);\n\n      if (error) {\n        if (paymentIntent) {\n          return {\n            error,\n            paymentIntent,\n          };\n        }\n        return {\n          error,\n          paymentIntent: undefined,\n        };\n      }\n      return {\n        paymentIntent: paymentIntent!,\n        error: undefined,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'collectPaymentMethod')(params);\n}\n\nexport async function retrievePaymentIntent(\n  clientSecret: string\n): Promise<PaymentIntentResultType> {\n  return Logger.traceSdkMethod(async (innerClientSecret) => {\n    try {\n      const { error, paymentIntent } =\n        await StripeTerminalSdk.retrievePaymentIntent(innerClientSecret);\n\n      if (error) {\n        return {\n          error,\n          paymentIntent: undefined,\n        };\n      }\n      return {\n        paymentIntent: paymentIntent!,\n        error: undefined,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'retrievePaymentIntent')(clientSecret);\n}\n\nexport async function getLocations(\n  params: GetLocationsParams\n): Promise<GetLocationsResultType> {\n  return Logger.traceSdkMethod(async (innerParams) => {\n    try {\n      const { error, locations, hasMore } =\n        await StripeTerminalSdk.getLocations(innerParams);\n\n      if (error) {\n        return {\n          error,\n          locations: undefined,\n          hasMore: undefined,\n        };\n      }\n      return {\n        locations: locations!,\n        hasMore: hasMore || false,\n        error: undefined,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'getLocations')(params);\n}\n\nexport async function confirmPaymentIntent(\n  params: ConfirmPaymentMethodParams\n): Promise<PaymentIntentResultType> {\n  return Logger.traceSdkMethod(async (innerparams) => {\n    try {\n      const { error, paymentIntent: confirmedPaymentIntent } =\n        await StripeTerminalSdk.confirmPaymentIntent(innerparams);\n\n      if (error) {\n        if (confirmedPaymentIntent) {\n          return {\n            error,\n            paymentIntent: confirmedPaymentIntent,\n          };\n        }\n        return {\n          error,\n          paymentIntent: undefined,\n        };\n      }\n      return {\n        paymentIntent: confirmedPaymentIntent!,\n        error: undefined,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'confirmPaymentIntent')(params);\n}\n\nexport async function cancelPaymentIntent(\n  params: CancelPaymentMethodParams\n): Promise<PaymentIntentResultType> {\n  return Logger.traceSdkMethod(async (innerparams) => {\n    try {\n      const { paymentIntent: canceledPaymentIntent, error } =\n        await StripeTerminalSdk.cancelPaymentIntent(innerparams);\n\n      if (error) {\n        return {\n          error,\n          paymentIntent: undefined,\n        };\n      }\n      return {\n        paymentIntent: canceledPaymentIntent!,\n        error: undefined,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'cancelPaymentIntent')(params);\n}\n\nexport async function installAvailableUpdate(): Promise<{\n  error?: StripeError;\n}> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      await StripeTerminalSdk.installAvailableUpdate();\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'installAvailableUpdate')();\n}\n\nexport async function setReaderDisplay(\n  cart: Cart\n): Promise<{ error?: StripeError }> {\n  return Logger.traceSdkMethod(async (innerCart) => {\n    try {\n      const { error } = await StripeTerminalSdk.setReaderDisplay(innerCart);\n\n      if (error) {\n        return {\n          error,\n        };\n      }\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'setReaderDisplay')(cart);\n}\n\nexport async function cancelInstallingUpdate(): Promise<{\n  error?: StripeError;\n}> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      await StripeTerminalSdk.cancelInstallingUpdate();\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'cancelInstallingUpdate')();\n}\n\nexport async function retrieveSetupIntent(\n  clientSecret: string\n): Promise<SetupIntentResultType> {\n  return Logger.traceSdkMethod(async (innerClientSecret) => {\n    try {\n      const { error, setupIntent } =\n        await StripeTerminalSdk.retrieveSetupIntent(innerClientSecret);\n      if (error) {\n        return {\n          setupIntent: undefined,\n          error,\n        };\n      }\n      return {\n        setupIntent: setupIntent!,\n        error: undefined,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'retrieveSetupIntent')(clientSecret);\n}\n\nexport async function collectSetupIntentPaymentMethod(\n  params: CollectSetupIntentPaymentMethodParams\n): Promise<SetupIntentResultType> {\n  return Logger.traceSdkMethod(async (innerParams) => {\n    try {\n      const { error, setupIntent } =\n        await StripeTerminalSdk.collectSetupIntentPaymentMethod(innerParams);\n      if (error) {\n        return {\n          setupIntent: undefined,\n          error,\n        };\n      }\n      return {\n        setupIntent: setupIntent!,\n        error: undefined,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'collectSetupIntentPaymentMethod')(params);\n}\n\nexport async function clearReaderDisplay(): Promise<ClearReaderDisplayResultType> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      const { error } = await StripeTerminalSdk.clearReaderDisplay();\n\n      return {\n        error: error,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'clearReaderDisplay')();\n}\n\nexport async function cancelSetupIntent(\n  params: CancelSetupIntentMethodParams\n): Promise<SetupIntentResultType> {\n  return Logger.traceSdkMethod(async (innerParams) => {\n    try {\n      const { setupIntent: canceledSetupIntent, error } =\n        await StripeTerminalSdk.cancelSetupIntent(innerParams);\n\n      if (error) {\n        return {\n          error,\n          setupIntent: undefined,\n        };\n      }\n      return {\n        setupIntent: canceledSetupIntent!,\n        error: undefined,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'cancelSetupIntent')(params);\n}\n\nexport async function confirmSetupIntent(\n  params: ConfirmSetupIntentMethodParams\n): Promise<SetupIntentResultType> {\n  return Logger.traceSdkMethod(async (innerparams) => {\n    try {\n      const { setupIntent: confirmedSetupIntent, error } =\n        await StripeTerminalSdk.confirmSetupIntent(innerparams);\n\n      if (error) {\n        return {\n          error,\n          setupIntent: undefined,\n        };\n      }\n      return {\n        setupIntent: confirmedSetupIntent!,\n        error: undefined,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'confirmSetupIntent')(params);\n}\n\nexport async function simulateReaderUpdate(\n  update: Reader.SimulateUpdateType\n): Promise<{ error?: StripeError }> {\n  try {\n    await StripeTerminalSdk.simulateReaderUpdate(update);\n\n    return {};\n  } catch (error) {\n    return {\n      error: error as any,\n    };\n  }\n}\n\nexport async function setSimulatedCard(\n  cardNumber: string\n): Promise<{ error?: StripeError }> {\n  return Logger.traceSdkMethod(async (innerCardNumber) => {\n    try {\n      await StripeTerminalSdk.setSimulatedCard(innerCardNumber);\n\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'setSimulatedCard')(cardNumber);\n}\n\nexport async function setSimulatedOfflineMode(\n  simulatedOffline: boolean\n): Promise<{ error?: StripeError }> {\n  return Logger.traceSdkMethod(async (innerSimulatedOffline) => {\n    try {\n      await StripeTerminalSdk.setSimulatedOfflineMode(innerSimulatedOffline);\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'setSimulatedOfflineMode')(simulatedOffline);\n}\n\nexport async function setSimulatedCollectInputsResult(\n  simulatedCollectInputsBehavior: string\n): Promise<{ error?: StripeError }> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      await StripeTerminalSdk.setSimulatedCollectInputsResult(\n        simulatedCollectInputsBehavior\n      );\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'setSimulatedCollectInputsResult')(simulatedCollectInputsBehavior);\n}\n\nexport async function collectRefundPaymentMethod(\n  params: RefundParams\n): Promise<{\n  error?: StripeError;\n}> {\n  return Logger.traceSdkMethod(async (innerParams) => {\n    try {\n      const { error } = await StripeTerminalSdk.collectRefundPaymentMethod(\n        innerParams\n      );\n      return {\n        error,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'collectRefundPaymentMethod')(params);\n}\n\nexport async function confirmRefund(): Promise<ConfirmRefundResultType> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      const { error, refund } = await StripeTerminalSdk.confirmRefund();\n      if (error) {\n        return {\n          error,\n          refund: undefined,\n        };\n      }\n      return {\n        refund: refund,\n        error: undefined,\n      };\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'confirmRefund')();\n}\n\nexport async function clearCachedCredentials(): Promise<{\n  error?: StripeError;\n}> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      await StripeTerminalSdk.clearCachedCredentials();\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'clearCachedCredentials')();\n}\n\nexport async function cancelCollectPaymentMethod(): Promise<{\n  error?: StripeError;\n}> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      await StripeTerminalSdk.cancelCollectPaymentMethod();\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'cancelCollectPaymentMethod')();\n}\n\nexport async function cancelCollectRefundPaymentMethod(): Promise<{\n  error?: StripeError;\n}> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      await StripeTerminalSdk.cancelCollectRefundPaymentMethod();\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'cancelCollectRefundPaymentMethod')();\n}\n\nexport async function cancelCollectSetupIntent(): Promise<{\n  error?: StripeError;\n}> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      await StripeTerminalSdk.cancelCollectSetupIntent();\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'cancelCollectSetupIntent')();\n}\n\nexport async function cancelConfirmPaymentIntent(): Promise<{\n  error?: StripeError;\n}> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      await StripeTerminalSdk.cancelConfirmPaymentIntent();\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'cancelConfirmPaymentIntent')();\n}\n\nexport async function cancelConfirmSetupIntent(): Promise<{\n  error?: StripeError;\n}> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      await StripeTerminalSdk.cancelConfirmSetupIntent();\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'cancelConfirmSetupIntent')();\n}\n\nexport async function cancelConfirmRefund(): Promise<{\n  error?: StripeError;\n}> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      await StripeTerminalSdk.cancelConfirmRefund();\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'cancelConfirmRefund')();\n}\n\nexport async function getOfflineStatus(): Promise<OfflineStatus> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      const offlineStatus = await StripeTerminalSdk.getOfflineStatus();\n      return offlineStatus;\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'getOfflineStatus')();\n}\n\nexport async function getPaymentStatus(): Promise<PaymentStatus> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      const paymentStatus = await StripeTerminalSdk.getPaymentStatus();\n      return paymentStatus;\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'getPaymentStatus')();\n}\n\nexport async function getConnectionStatus(): Promise<ConnectionStatus> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      const connectionStatus = await StripeTerminalSdk.getConnectionStatus();\n      return connectionStatus;\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'getConnectionStatus')();\n}\n\nexport async function getConnectedReader(): Promise<Reader.Type> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      const connectedReader = await StripeTerminalSdk.getConnectedReader();\n      return connectedReader;\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'getConnectedReader')();\n}\n\nexport async function getReaderSettings(): Promise<Reader.ReaderSettings> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      const readerSettings = await StripeTerminalSdk.getReaderSettings();\n      return readerSettings;\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'getReaderSettings')();\n}\n\nexport async function setReaderSettings(\n  params: Reader.ReaderSettingsParameters\n): Promise<Reader.ReaderSettings> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      const readerSettings = await StripeTerminalSdk.setReaderSettings(params);\n      return readerSettings;\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'setReaderSettings')();\n}\n\nexport async function collectInputs(\n  params: ICollectInputsParameters\n): Promise<ICollectInputsResults> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      const response = await StripeTerminalSdk.collectInputs(params);\n      return response;\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'collectInputs')();\n}\n\nexport async function cancelCollectInputs(): Promise<{\n  error?: StripeError;\n}> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      await StripeTerminalSdk.cancelCollectInputs();\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'cancelCollectInputs')();\n}\n\nexport async function collectData(\n  params: CollectDataParams\n): Promise<CollectDataResultType> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      const response = await StripeTerminalSdk.collectData(params);\n      return response;\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'collectData')();\n}\n\nexport async function cancelCollectData(): Promise<{\n  error?: StripeError;\n}> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      await StripeTerminalSdk.cancelCollectData();\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'cancelCollectData')();\n}\n\nexport async function print(content: PrintContent): Promise<{\n  error?: StripeError;\n}> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      const { error } = await StripeTerminalSdk.print(content);\n      if (error) {\n        return {\n          error,\n        };\n      }\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'print')();\n}\n\nexport async function cancelReaderReconnection(): Promise<{\n  error?: StripeError;\n}> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      await StripeTerminalSdk.cancelReaderReconnection();\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'cancelReaderReconnection')();\n}\n\nexport async function supportsReadersOfType(\n  params: Reader.ReaderSupportParams\n): Promise<Reader.ReaderSupportResult> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      const supportReaderResult = await StripeTerminalSdk.supportsReadersOfType(\n        params\n      );\n      return supportReaderResult;\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'supportsReadersOfType')();\n}\n\nexport async function setTapToPayUxConfiguration(\n  params: TapToPayUxConfiguration\n): Promise<{\n  error?: StripeError;\n}> {\n  if (Platform.OS === 'ios') {\n    return {\n      error: {\n        message: \"'setTapToPayUxConfiguration' is unsupported on iOS\",\n        code: CommonError.Failed,\n      },\n    };\n  }\n\n  return Logger.traceSdkMethod(async () => {\n    try {\n      await StripeTerminalSdk.setTapToPayUxConfiguration(params);\n      return {};\n    } catch (error) {\n      return {\n        error: error as any,\n      };\n    }\n  }, 'setTapToPayUxConfiguration')();\n}\n\nexport async function getNativeSdkVersion(): Promise<string> {\n  return Logger.traceSdkMethod(async () => {\n    try {\n      return await StripeTerminalSdk.getNativeSdkVersion();\n    } catch (error) {\n      return '';\n    }\n  }, 'getNativeSdkVersion')();\n}\n"],"mappings":"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","ignoreList":[]}