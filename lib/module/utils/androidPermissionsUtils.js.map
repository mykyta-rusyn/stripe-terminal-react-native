{"version":3,"names":["_reactNative","require","defaultFineLocationParams","title","message","buttonPositive","isAndroid12orHigher","Platform","OS","Version","requestNeededAndroidPermissions","_requestNeededAndroidPermissions","apply","arguments","_asyncToGenerator2","default","_ref","length","undefined","_ref$accessFineLocati","accessFineLocation","grantedFineLocation","PermissionsAndroid","request","PERMISSIONS","ACCESS_FINE_LOCATION","hasGrantedPermission","error","_defineProperty2","grantedBT","BLUETOOTH_CONNECT","grantedBTScan","BLUETOOTH_SCAN","status","RESULTS","GRANTED"],"sources":["androidPermissionsUtils.ts"],"sourcesContent":["import { PermissionsAndroid, Platform } from 'react-native';\n\nconst defaultFineLocationParams = {\n  title: 'Location Permission',\n  message: 'Stripe Terminal needs access to your location',\n  buttonPositive: 'Accept',\n};\n\ntype PermissionsProps = {\n  accessFineLocation?: {\n    title: string;\n    message: string;\n    buttonPositive: string;\n  };\n};\n\ntype Error = { error: Record<string, string> | null };\n\nconst isAndroid12orHigher = () =>\n  Platform.OS === 'android' && Platform.Version >= 31;\n\nexport async function requestNeededAndroidPermissions({\n  accessFineLocation = defaultFineLocationParams,\n}: PermissionsProps | undefined = {}): Promise<Error> {\n  const grantedFineLocation = await PermissionsAndroid.request(\n    PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\n    accessFineLocation || defaultFineLocationParams\n  );\n\n  if (!hasGrantedPermission(grantedFineLocation)) {\n    return {\n      error: {\n        [PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION]:\n          grantedFineLocation,\n      },\n    };\n  }\n\n  if (!isAndroid12orHigher()) {\n    // we're done, we don't need to ask for BT perms\n    return { error: null };\n  }\n\n  // otherwise within expo we have to make use of react-native-permissions\n  const grantedBT = await PermissionsAndroid.request(\n    // BLUETOOTH_CONNECT doesn't support customization\n    PermissionsAndroid.PERMISSIONS.BLUETOOTH_CONNECT\n  );\n\n  if (!hasGrantedPermission(grantedBT)) {\n    return {\n      error: {\n        [PermissionsAndroid.PERMISSIONS.BLUETOOTH_CONNECT]: grantedBT,\n      },\n    };\n  }\n\n  const grantedBTScan = await PermissionsAndroid.request(\n    // BLUETOOTH_SCAN doesn't support customization\n    PermissionsAndroid.PERMISSIONS.BLUETOOTH_SCAN\n  );\n\n  if (!hasGrantedPermission(grantedBTScan)) {\n    return {\n      error: {\n        [PermissionsAndroid.PERMISSIONS.BLUETOOTH_SCAN]: grantedBTScan,\n      },\n    };\n  }\n\n  return { error: null };\n}\n\nconst hasGrantedPermission = (status: string) => {\n  return status === PermissionsAndroid.RESULTS.GRANTED;\n};\n"],"mappings":"oZAAA,IAAAA,YAAA,CAAAC,OAAA,iBAEA,GAAM,CAAAC,yBAAyB,CAAG,CAChCC,KAAK,CAAE,qBAAqB,CAC5BC,OAAO,CAAE,+CAA+C,CACxDC,cAAc,CAAE,QAClB,CAAC,CAYD,GAAM,CAAAC,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAA,QACvB,CAAAC,qBAAQ,CAACC,EAAE,GAAK,SAAS,EAAID,qBAAQ,CAACE,OAAO,EAAI,EAAE,GAAC,QAEhC,CAAAC,+BAA+BA,CAAA,SAAAC,gCAAA,CAAAC,KAAA,MAAAC,SAAA,YAAAF,iCAAA,EAAAA,gCAAA,IAAAG,kBAAA,CAAAC,OAAA,EAA9C,WAE+C,KAAAC,IAAA,CAAAH,SAAA,CAAAI,MAAA,IAAAJ,SAAA,MAAAK,SAAA,CAAAL,SAAA,IAApB,CAAC,CAAC,CAAAM,qBAAA,CAAAH,IAAA,CADlCI,kBAAkB,CAAlBA,kBAAkB,CAAAD,qBAAA,UAAGjB,yBAAyB,CAAAiB,qBAAA,CAE9C,GAAM,CAAAE,mBAAmB,MAAS,CAAAC,+BAAkB,CAACC,OAAO,CAC1DD,+BAAkB,CAACE,WAAW,CAACC,oBAAoB,CACnDL,kBAAkB,EAAIlB,yBACxB,CAAC,CAED,GAAI,CAACwB,oBAAoB,CAACL,mBAAmB,CAAC,CAAE,CAC9C,MAAO,CACLM,KAAK,IAAAC,gBAAA,CAAAb,OAAA,KACFO,+BAAkB,CAACE,WAAW,CAACC,oBAAoB,CAClDJ,mBAAmB,CAEzB,CAAC,CACH,CAEA,GAAI,CAACf,mBAAmB,CAAC,CAAC,CAAE,CAE1B,MAAO,CAAEqB,KAAK,CAAE,IAAK,CAAC,CACxB,CAGA,GAAM,CAAAE,SAAS,MAAS,CAAAP,+BAAkB,CAACC,OAAO,CAEhDD,+BAAkB,CAACE,WAAW,CAACM,iBACjC,CAAC,CAED,GAAI,CAACJ,oBAAoB,CAACG,SAAS,CAAC,CAAE,CACpC,MAAO,CACLF,KAAK,IAAAC,gBAAA,CAAAb,OAAA,KACFO,+BAAkB,CAACE,WAAW,CAACM,iBAAiB,CAAGD,SAAS,CAEjE,CAAC,CACH,CAEA,GAAM,CAAAE,aAAa,MAAS,CAAAT,+BAAkB,CAACC,OAAO,CAEpDD,+BAAkB,CAACE,WAAW,CAACQ,cACjC,CAAC,CAED,GAAI,CAACN,oBAAoB,CAACK,aAAa,CAAC,CAAE,CACxC,MAAO,CACLJ,KAAK,IAAAC,gBAAA,CAAAb,OAAA,KACFO,+BAAkB,CAACE,WAAW,CAACQ,cAAc,CAAGD,aAAa,CAElE,CAAC,CACH,CAEA,MAAO,CAAEJ,KAAK,CAAE,IAAK,CAAC,CACxB,CAAC,SAAAhB,gCAAA,CAAAC,KAAA,MAAAC,SAAA,GAED,GAAM,CAAAa,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAAIO,MAAc,CAAK,CAC/C,MAAO,CAAAA,MAAM,GAAKX,+BAAkB,CAACY,OAAO,CAACC,OAAO,CACtD,CAAC","ignoreList":[]}