{"version":3,"names":["Reader"],"sources":["Reader.ts"],"sourcesContent":["import type { Location, LocationStatus, StripeError } from './';\n\nexport namespace Reader {\n  export type DiscoveryMethod = IOS.DiscoveryMethod | Android.DiscoveryMethod;\n\n  export type Type = IOS.Type &\n    Android.Type & {\n      id: string;\n      label?: string;\n      batteryLevel?: number;\n      serialNumber: string;\n      locationId?: string;\n      deviceSoftwareVersion?: string;\n      simulated?: boolean;\n      availableUpdate?: SoftwareUpdate;\n      ipAddress?: string;\n      locationStatus: LocationStatus;\n      location?: Location;\n      deviceType: DeviceType;\n      status: NetworkStatus;\n    };\n\n  export namespace IOS {\n    export type Type = {\n      batteryStatus: BatteryStatus;\n      isCharging?: number;\n    };\n\n    /**\n     * Supported DiscoveryMethod for discovering devices.\n     *\n     * @remarks\n     * USB is in private preview for iPads with M-series chips. Contact Stripe support to join the preview if interested.\n     */\n    export type DiscoveryMethod =\n      | 'bluetoothProximity'\n      | 'bluetoothScan'\n      | 'internet'\n      | 'tapToPay'\n      | 'usb';\n  }\n\n  export namespace Android {\n    export type Type = {\n      baseUrl?: string;\n      bootloaderVersion?: string;\n      configVersion?: string;\n      emvKeyProfileId?: string;\n      firmwareVersion?: string;\n      hardwareVersion?: string;\n      macKeyProfileId?: string;\n      pinKeyProfileId?: string;\n      trackKeyProfileId?: string;\n      settingsVersion?: string;\n      pinKeysetId?: string;\n    };\n\n    export type DiscoveryMethod =\n      | 'bluetoothScan'\n      | 'internet'\n      | 'tapToPay'\n      | 'handoff'\n      | 'usb';\n  }\n\n  export type BatteryStatus = 'critical' | 'low' | 'nominal' | 'unknown';\n\n  export type BatteryLevel = {\n    batteryLevel: number;\n    batteryStatus: BatteryStatus;\n    isCharging: boolean;\n  };\n\n  export type NetworkStatus = 'offline' | 'online';\n\n  export type SoftwareUpdate = {\n    deviceSoftwareVersion: string;\n    estimatedUpdateTime: EstimatedUpdateTime;\n    requiredAt?: string;\n  };\n\n  export type EstimatedUpdateTime =\n    | 'estimate1To2Minutes'\n    | 'estimate2To5Minutes'\n    | 'estimate5To15Minutes'\n    | 'estimateLessThan1Minute';\n\n  export type SimulateUpdateType =\n    | 'random'\n    | 'available'\n    | 'none'\n    | 'required'\n    | 'lowBattery';\n\n  export type DeviceType =\n    | 'chipper1X'\n    | 'chipper2X'\n    | 'stripeM2'\n    | 'verifoneP400'\n    | 'wiseCube'\n    | 'wisePad3'\n    | 'wisePosE'\n    | 'wisePosEDevkit'\n    | 'wisePad3s'\n    | 'stripeS700Devkit'\n    | 'stripeS700'\n    | 'stripeS710Devkit'\n    | 'stripeS710'\n    | 'cotsDevice'\n    | 'tapToPay'\n    | 'etna';\n\n  export type InputOptions = 'insertCard' | 'swipeCard' | 'tapCard';\n\n  export type DisplayMessage =\n    | 'insertCard'\n    | 'insertOrSwipeCard'\n    | 'multipleContactlessCardsDetected'\n    | 'removeCard'\n    | 'retryCard'\n    | 'swipeCard'\n    | 'tryAnotherCard'\n    | 'tryAnotherReadMethod'\n    | 'checkMobileDevice'\n    | 'cardRemovedTooEarly';\n\n  export type ConnectionStatus =\n    | 'connected'\n    | 'connecting'\n    | 'notConnected'\n    | 'discovering';\n\n  export type DisconnectReason =\n    | 'disconnectRequested'\n    | 'rebootRequested'\n    | 'securityReboot'\n    | 'criticallyLowBattery'\n    | 'poweredOff'\n    | 'bluetoothDisabled'\n    | 'bluetoothSignalLost'\n    | 'usbDisconnected'\n    | 'idlePowerDown'\n    | 'unknown';\n\n  export type ReaderSettings =\n    | {\n        accessibility?: Accessibility;\n        error?: undefined;\n      }\n    | {\n        accessibility?: undefined;\n        error?: StripeError;\n      };\n\n  export type Accessibility = {\n    textToSpeechStatus: ReaderTextToSpeechStatus;\n    error?: StripeError;\n  };\n\n  export type ReaderTextToSpeechStatus = 'off' | 'headphones' | 'speakers';\n\n  export type ReaderSettingsParameters = {\n    textToSpeechViaSpeakers: boolean;\n  };\n\n  export type ReaderSupportParams = {\n    deviceType: DeviceType;\n    simulated?: boolean;\n    discoveryMethod: Reader.DiscoveryMethod;\n  };\n\n  export type ReaderSupportResult = {\n    error?: StripeError;\n    readerSupportResult: boolean;\n  };\n}\n"],"mappings":"kFAEiB,CAAAA,MAAM","ignoreList":[]}