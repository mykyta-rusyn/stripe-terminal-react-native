{"version":3,"names":["_react","_interopRequireWildcard","require","_types","_StripeTerminalContext","_functions","_useListener","_reactNative","_EventEmitter","_interopRequireDefault","_jsxRuntime","_jsxFileName","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_NativeModules$Stripe","NativeModules","StripeTerminalReactNative","getConstants","FETCH_TOKEN_PROVIDER","CHANGE_CONNECTION_STATUS","CHANGE_PAYMENT_STATUS","FINISH_DISCOVERING_READERS","FINISH_INSTALLING_UPDATE","REQUEST_READER_DISPLAY_MESSAGE","REQUEST_READER_INPUT","REPORT_AVAILABLE_UPDATE","REPORT_UPDATE_PROGRESS","START_INSTALLING_UPDATE","UPDATE_DISCOVERED_READERS","START_READER_RECONNECT","READER_RECONNECT_SUCCEED","READER_RECONNECT_FAIL","CHANGE_OFFLINE_STATUS","FORWARD_PAYMENT_INTENT","REPORT_FORWARDING_ERROR","DISCONNECT","UPDATE_BATTERY_LEVEL","REPORT_LOW_BATTERY_WARNING","REPORT_READER_EVENT","ACCEPT_TERMS_OF_SERVICE","emitter","EventEmitter","TOKEN_PROVIDER_ERROR_MESSAGE","StripeTerminalProvider","_ref","children","tokenProvider","logLevel","isInitializedRef","useRef","getIsInitialized","useCallback","current","_useState","useState","_useState2","_slicedToArray2","loading","setLoading","_useState3","_useState4","connectedReader","setConnectedReader","_useState5","_useState6","discoveredReaders","setDiscoveredReaders","log","code","message","console","didUpdateDiscoveredReaders","_ref2","readers","emit","didFinishDiscoveringReaders","_ref3","result","error","didReportAvailableUpdate","_ref4","didStartInstallingUpdate","_ref5","didReportReaderSoftwareUpdateProgress","_ref6","progress","didFinishInstallingUpdate","_ref7","didRequestReaderInput","_ref8","didRequestReaderDisplayMessage","_ref9","didChangePaymentStatus","_ref0","didChangeConnectionStatus","_ref1","didStartReaderReconnect","_ref10","reason","didSucceedReaderReconnect","_ref11","reader","didFailReaderReconnect","_ref12","didChangeOfflineStatus","_ref13","didForwardPaymentIntent","_ref14","assign","didReportForwardingError","_ref15","didDisconnect","_ref16","didUpdateBatteryLevel","_ref17","didReportLowBatteryWarning","_ref18","didReportReaderEvent","_ref19","didAcceptTermsOfService","useListener","tokenProviderHandler","_ref21","_asyncToGenerator2","_ref20","callbackId","connectionToken","setConnectionToken","undefined","_x","apply","arguments","_initialize","CommonError","Failed","response","initialize","value","useMemo","isInitialized","jsx","StripeTerminalContext","Provider"],"sources":["StripeTerminalProvider.tsx"],"sourcesContent":["import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport {\n  type Reader,\n  type LogLevel,\n  CommonError,\n  type StripeError,\n  type EventResult,\n  type PaymentStatus,\n  type OfflineStatus,\n  type PaymentIntent,\n  type ReaderEvent,\n} from '../types';\nimport { StripeTerminalContext } from './StripeTerminalContext';\nimport { initialize, setConnectionToken } from '../functions';\nimport { useListener } from '../hooks/useListener';\nimport { NativeModules } from 'react-native';\nimport EventEmitter from 'react-native/Libraries/vendor/emitter/EventEmitter';\n\nconst {\n  FETCH_TOKEN_PROVIDER,\n  CHANGE_CONNECTION_STATUS,\n  CHANGE_PAYMENT_STATUS,\n  FINISH_DISCOVERING_READERS,\n  FINISH_INSTALLING_UPDATE,\n  REQUEST_READER_DISPLAY_MESSAGE,\n  REQUEST_READER_INPUT,\n  REPORT_AVAILABLE_UPDATE,\n  REPORT_UPDATE_PROGRESS,\n  START_INSTALLING_UPDATE,\n  UPDATE_DISCOVERED_READERS,\n  START_READER_RECONNECT,\n  READER_RECONNECT_SUCCEED,\n  READER_RECONNECT_FAIL,\n  CHANGE_OFFLINE_STATUS,\n  FORWARD_PAYMENT_INTENT,\n  REPORT_FORWARDING_ERROR,\n  DISCONNECT,\n  UPDATE_BATTERY_LEVEL,\n  REPORT_LOW_BATTERY_WARNING,\n  REPORT_READER_EVENT,\n  ACCEPT_TERMS_OF_SERVICE,\n} = NativeModules.StripeTerminalReactNative.getConstants();\n\nconst emitter = new EventEmitter();\n\nconst TOKEN_PROVIDER_ERROR_MESSAGE =\n  \"Couldn't fetch connection token. Please check your tokenProvider method\";\n\n/**\n *  StripeTerminalProvider Component Props\n */\nexport interface Props {\n  children: React.ReactElement | React.ReactElement[];\n  /*\n   You must set a token provider before calling any Stripe terminal method.\n   This should fetch a connection token from your server and return it as a string.\n    * @example\n    * ```ts\n    * const fetchTokenProvider = async () => {\n    *   const response = await fetch('http://api_url/connection_token');\n    *   const { secret } = await response.json();\n    *   return secret;\n    * };\n    * ```\n   */\n  tokenProvider: () => Promise<string>;\n  logLevel?: LogLevel;\n}\n\n/**\n *  StripeTerminalProvider Component\n *\n * @example\n * ```ts\n *  <StripeTerminalProvider tokenProvider={tokenProvider}>\n *    <App />\n *  </StripeTerminalProvider>\n * ```\n * @param __namedParameters Props\n * @returns React.JSX.Element\n * @category ReactComponents\n */\nexport function StripeTerminalProvider({\n  children,\n  tokenProvider,\n  logLevel,\n}: Props) {\n  const isInitializedRef = useRef(false);\n  const getIsInitialized = useCallback(() => isInitializedRef.current, []);\n  const [loading, setLoading] = useState(true);\n  const [connectedReader, setConnectedReader] = useState<Reader.Type | null>();\n  const [discoveredReaders, setDiscoveredReaders] = useState<Reader.Type[]>([]);\n\n  const log = useCallback(\n    (code: string, message?: any) => {\n      if (logLevel === 'verbose') {\n        console.log(`[Stripe terminal]: ${code}`, message);\n      }\n    },\n    [logLevel]\n  );\n\n  const didUpdateDiscoveredReaders = useCallback(\n    ({ readers }: { readers: Reader.Type[] }) => {\n      log('didUpdateDiscoveredReaders', readers);\n      emitter?.emit(UPDATE_DISCOVERED_READERS, readers);\n    },\n    [log]\n  );\n\n  const didFinishDiscoveringReaders = useCallback(\n    ({ result }: EventResult<{ error?: StripeError }>) => {\n      log('didFinishDiscoveringReaders', result);\n      emitter?.emit(FINISH_DISCOVERING_READERS, result.error);\n    },\n    [log]\n  );\n\n  const didReportAvailableUpdate = useCallback(\n    ({ result }: EventResult<Reader.SoftwareUpdate>) => {\n      log('didReportAvailableUpdate', result);\n      emitter?.emit(REPORT_AVAILABLE_UPDATE, result);\n    },\n    [log]\n  );\n\n  const didStartInstallingUpdate = useCallback(\n    ({ result }: EventResult<Reader.SoftwareUpdate>) => {\n      log('didStartInstallingUpdate', result);\n      emitter?.emit(START_INSTALLING_UPDATE, result);\n    },\n    [log]\n  );\n\n  const didReportReaderSoftwareUpdateProgress = useCallback(\n    ({ result }: EventResult<{ progress: string }>) => {\n      log('didReportReaderSoftwareUpdateProgress', result);\n      emitter?.emit(REPORT_UPDATE_PROGRESS, result.progress);\n    },\n    [log]\n  );\n\n  const didFinishInstallingUpdate = useCallback(\n    ({\n      result,\n    }: EventResult<Reader.SoftwareUpdate | { error: StripeError }>) => {\n      log('didFinishInstallingUpdate', result);\n      emitter?.emit(FINISH_INSTALLING_UPDATE, result);\n    },\n    [log]\n  );\n\n  const didRequestReaderInput = useCallback(\n    ({ result }: EventResult<Reader.InputOptions[]>) => {\n      log('didRequestReaderInput', result);\n      emitter?.emit(REQUEST_READER_INPUT, result);\n    },\n    [log]\n  );\n\n  const didRequestReaderDisplayMessage = useCallback(\n    ({ result }: EventResult<Reader.DisplayMessage>) => {\n      log('didRequestReaderDisplayMessage', result);\n      emitter?.emit(REQUEST_READER_DISPLAY_MESSAGE, result);\n    },\n    [log]\n  );\n\n  const didChangePaymentStatus = useCallback(\n    ({ result }: EventResult<PaymentStatus>) => {\n      log('didChangePaymentStatus', result);\n      emitter?.emit(CHANGE_PAYMENT_STATUS, result);\n    },\n    [log]\n  );\n\n  const didChangeConnectionStatus = useCallback(\n    ({ result }: EventResult<Reader.ConnectionStatus>) => {\n      log('didChangeConnectionStatus', result);\n      emitter?.emit(CHANGE_CONNECTION_STATUS, result);\n    },\n    [log]\n  );\n\n  const didStartReaderReconnect = useCallback(\n    ({ reason }: { reason: Reader.DisconnectReason }) => {\n      log('didStartReaderReconnect', reason);\n      emitter?.emit(START_READER_RECONNECT, reason);\n    },\n    [log]\n  );\n\n  const didSucceedReaderReconnect = useCallback(\n    ({ reader }: { reader: Reader.Type }) => {\n      log('didSucceedReaderReconnect');\n      emitter?.emit(READER_RECONNECT_SUCCEED, reader);\n    },\n    [log]\n  );\n\n  const didFailReaderReconnect = useCallback(\n    ({ error }: { error?: StripeError }) => {\n      log('didFailReaderReconnect');\n      emitter?.emit(READER_RECONNECT_FAIL, error);\n    },\n    [log]\n  );\n\n  const didChangeOfflineStatus = useCallback(\n    ({ result }: { result?: OfflineStatus }) => {\n      log('didChangeOfflineStatus', result);\n      emitter?.emit(CHANGE_OFFLINE_STATUS, result);\n    },\n    [log]\n  );\n\n  const didForwardPaymentIntent = useCallback(\n    ({ result, error }: { result: PaymentIntent.Type; error: StripeError }) => {\n      log('didForwardPaymentIntent', { ...result, ...error });\n      emitter?.emit(FORWARD_PAYMENT_INTENT, result, error);\n    },\n    [log]\n  );\n\n  const didReportForwardingError = useCallback(\n    ({ error }: { error?: StripeError }) => {\n      log('didReportForwardingError', error);\n      emitter?.emit(REPORT_FORWARDING_ERROR, error);\n    },\n    [log]\n  );\n\n  const didDisconnect = useCallback(\n    ({ reason }: { reason?: Reader.DisconnectReason }) => {\n      log('didDisconnect', reason);\n      emitter?.emit(DISCONNECT, reason);\n    },\n    [log]\n  );\n\n  const didUpdateBatteryLevel = useCallback(\n    ({ result }: { result?: Reader.BatteryLevel }) => {\n      log('didUpdateBatteryLevel', result);\n      emitter?.emit(UPDATE_BATTERY_LEVEL, result);\n    },\n    [log]\n  );\n\n  const didReportLowBatteryWarning = useCallback(\n    ({ result }: { result?: string }) => {\n      log('didReportLowBatteryWarning', result);\n      emitter?.emit(REPORT_LOW_BATTERY_WARNING, result);\n    },\n    [log]\n  );\n\n  const didReportReaderEvent = useCallback(\n    ({ result }: EventResult<ReaderEvent>) => {\n      log('didReportReaderEvent', result);\n      emitter?.emit(REPORT_READER_EVENT, result);\n    },\n    [log]\n  );\n\n  const didAcceptTermsOfService = useCallback(() => {\n    log('didAcceptTermsOfService');\n    emitter?.emit(ACCEPT_TERMS_OF_SERVICE);\n  }, [log]);\n\n  useListener(REPORT_AVAILABLE_UPDATE, didReportAvailableUpdate);\n  useListener(START_INSTALLING_UPDATE, didStartInstallingUpdate);\n  useListener(REPORT_UPDATE_PROGRESS, didReportReaderSoftwareUpdateProgress);\n  useListener(FINISH_INSTALLING_UPDATE, didFinishInstallingUpdate);\n\n  useListener(UPDATE_DISCOVERED_READERS, didUpdateDiscoveredReaders);\n  useListener(FINISH_DISCOVERING_READERS, didFinishDiscoveringReaders);\n\n  useListener(REQUEST_READER_INPUT, didRequestReaderInput);\n  useListener(REQUEST_READER_DISPLAY_MESSAGE, didRequestReaderDisplayMessage);\n  useListener(CHANGE_PAYMENT_STATUS, didChangePaymentStatus);\n  useListener(CHANGE_CONNECTION_STATUS, didChangeConnectionStatus);\n\n  useListener(START_READER_RECONNECT, didStartReaderReconnect);\n  useListener(READER_RECONNECT_SUCCEED, didSucceedReaderReconnect);\n  useListener(READER_RECONNECT_FAIL, didFailReaderReconnect);\n\n  useListener(CHANGE_OFFLINE_STATUS, didChangeOfflineStatus);\n  useListener(FORWARD_PAYMENT_INTENT, didForwardPaymentIntent);\n  useListener(REPORT_FORWARDING_ERROR, didReportForwardingError);\n\n  useListener(DISCONNECT, didDisconnect);\n\n  useListener(UPDATE_BATTERY_LEVEL, didUpdateBatteryLevel);\n  useListener(REPORT_LOW_BATTERY_WARNING, didReportLowBatteryWarning);\n  useListener(REPORT_READER_EVENT, didReportReaderEvent);\n  useListener(ACCEPT_TERMS_OF_SERVICE, didAcceptTermsOfService);\n\n  const tokenProviderHandler = async ({\n    callbackId,\n  }: {\n    callbackId: string;\n  }) => {\n    try {\n      const connectionToken = await tokenProvider();\n\n      setConnectionToken(connectionToken, undefined, callbackId);\n    } catch (error) {\n      setConnectionToken(undefined, TOKEN_PROVIDER_ERROR_MESSAGE, callbackId);\n\n      console.error(error);\n      console.error(TOKEN_PROVIDER_ERROR_MESSAGE);\n    }\n  };\n\n  useListener(FETCH_TOKEN_PROVIDER, tokenProviderHandler);\n\n  const _initialize = useCallback(async () => {\n    setLoading(true);\n\n    // test tokenProvider method since native SDK's doesn't fetch it on init\n    try {\n      await tokenProvider();\n    } catch (error) {\n      console.error(TOKEN_PROVIDER_ERROR_MESSAGE);\n      console.error(error);\n\n      return {\n        error: {\n          code: CommonError.Failed,\n          message: TOKEN_PROVIDER_ERROR_MESSAGE,\n        },\n      };\n    }\n\n    const response = await initialize({ logLevel });\n\n    if (response.error) {\n      log(response.error.code, response.error.message);\n    } else if (response.reader) {\n      log('Connected to the reader: ', response.reader);\n      setConnectedReader(response.reader);\n    }\n\n    if (!response.error) {\n      isInitializedRef.current = true;\n    }\n\n    setLoading(false);\n\n    return response;\n  }, [logLevel, tokenProvider, log]);\n\n  const value = useMemo(\n    () => ({\n      loading,\n      isInitialized: isInitializedRef.current,\n      getIsInitialized,\n      connectedReader,\n      discoveredReaders,\n      setLoading,\n      setConnectedReader,\n      setDiscoveredReaders,\n      log,\n      initialize: _initialize,\n      emitter,\n    }),\n    [\n      _initialize,\n      loading,\n      getIsInitialized,\n      connectedReader,\n      discoveredReaders,\n      setLoading,\n      setConnectedReader,\n      setDiscoveredReaders,\n      log,\n    ]\n  );\n\n  return (\n    <StripeTerminalContext.Provider value={value}>\n      {children}\n    </StripeTerminalContext.Provider>\n  );\n}\n"],"mappings":"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","ignoreList":[]}